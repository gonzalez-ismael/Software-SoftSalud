package com.softsalud.software.view;

import com.softsalud.software.connection.ConnectionDB;
import com.softsalud.software.controller.resource.FileProperties;
import com.softsalud.software.controller.PersonaController;
import com.softsalud.software.controller.ReporteController;
import com.softsalud.software.controller.VacunaController;
import com.softsalud.software.controller.VacunacionController;
import com.softsalud.software.persistence.repository.PersonaRepos;
import com.softsalud.software.persistence.repository.VacunaRepos;
import com.softsalud.software.persistence.repository.VacunacionRepos;
import com.softsalud.software.controller.ImportarPersonasController;
import com.softsalud.software.persistence.repository.interfaz.IPersonaRepository;
import com.softsalud.software.persistence.repository.interfaz.IVacunaRepository;
import com.softsalud.software.persistence.repository.interfaz.IVacunacionRepository;
import com.softsalud.software.controller.BackupController;
import static com.softsalud.software.controller.BackupController.esArchivoExcelValidoParaImportar;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Gonzalez Ismael
 */
public class JFrameMain extends javax.swing.JFrame {

    private final IVacunaRepository iVacunaRepos;
    private final IPersonaRepository iPersonaRepos;
    private final IVacunacionRepository iVacunacionRepos;
    private final PersonaController personaController;
    private final VacunaController vacunaController;
    private final VacunacionController vacunacionController;
    private final ReporteController reporteController;
    private final ImportarPersonasController importController;

    private final ConnectionDB connection;

    public JFrameMain(ConnectionDB connection) {
        initComponents();
        personalizarMenu();

        this.connection = connection;

        iPersonaRepos = new PersonaRepos(this.connection.getConnection());
        iVacunaRepos = new VacunaRepos(this.connection.getConnection());
        iVacunacionRepos = new VacunacionRepos(this.connection.getConnection());

        personaController = new PersonaController(iPersonaRepos);
        vacunaController = new VacunaController(iVacunaRepos);
        vacunacionController = new VacunacionController(iVacunacionRepos, iPersonaRepos, iVacunaRepos);

        reporteController = new ReporteController(iPersonaRepos, iVacunaRepos);
        importController = new ImportarPersonasController(personaController);

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        labelImagenFondo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPrincipal = new javax.swing.JMenu();
        JMPersonaMenu = new javax.swing.JMenuItem();
        JMVacunaMenu = new javax.swing.JMenuItem();
        JMVacunacionMenu = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        JMReporteMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        JMImportarDatosPersona = new javax.swing.JMenuItem();
        jMExportarTodosDatos = new javax.swing.JMenuItem();
        jMenuRestaurarCopiaSeguridad = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMConfiguracion = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        JMManualUsuario = new javax.swing.JMenuItem();
        JMAboutUs = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FINAL LP 2023");
        setIconImage(getIconImage());
        setResizable(false);

        labelImagenFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/HOSPITAL RIO TURBIO.png"))); // NOI18N
        labelImagenFondo.setBorder(new javax.swing.border.LineBorder(java.awt.Color.pink, 10, true));

        jMenuPrincipal.setText("Administraci贸n");

        JMPersonaMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        JMPersonaMenu.setText("Persona");
        JMPersonaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMPersonaMenuActionPerformed(evt);
            }
        });
        jMenuPrincipal.add(JMPersonaMenu);

        JMVacunaMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        JMVacunaMenu.setText("Vacuna");
        JMVacunaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMVacunaMenuActionPerformed(evt);
            }
        });
        jMenuPrincipal.add(JMVacunaMenu);

        JMVacunacionMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        JMVacunacionMenu.setText("Vacunaci贸n");
        JMVacunacionMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMVacunacionMenuActionPerformed(evt);
            }
        });
        jMenuPrincipal.add(JMVacunacionMenu);

        jMenuBar1.add(jMenuPrincipal);

        jMenu4.setText("Reportes");

        JMReporteMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        JMReporteMenu.setText("Generar reportes");
        JMReporteMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMReporteMenuActionPerformed(evt);
            }
        });
        jMenu4.add(JMReporteMenu);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Gestion de datos");

        JMImportarDatosPersona.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        JMImportarDatosPersona.setText("Importar datos de personas");
        JMImportarDatosPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMImportarDatosPersonaActionPerformed(evt);
            }
        });
        jMenu2.add(JMImportarDatosPersona);

        jMExportarTodosDatos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMExportarTodosDatos.setText("Guardar Copia de Seguridad");
        jMExportarTodosDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMExportarTodosDatosActionPerformed(evt);
            }
        });
        jMenu2.add(jMExportarTodosDatos);

        jMenuRestaurarCopiaSeguridad.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jMenuRestaurarCopiaSeguridad.setText("Restaurar Copia de Seguridad");
        jMenuRestaurarCopiaSeguridad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRestaurarCopiaSeguridadActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuRestaurarCopiaSeguridad);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Configuraci贸n");

        jMConfiguracion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jMConfiguracion.setText("Configuracion");
        jMConfiguracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMConfiguracionActionPerformed(evt);
            }
        });
        jMenu1.add(jMConfiguracion);

        jMenuBar1.add(jMenu1);
        jMenu1.getAccessibleContext().setAccessibleName("Gesti贸n de datos");

        jMenu3.setText("Ayuda");

        JMManualUsuario.setText("Manual de usuario");
        jMenu3.add(JMManualUsuario);

        JMAboutUs.setText("Acerca de nosotros");
        JMAboutUs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JMAboutUsActionPerformed(evt);
            }
        });
        jMenu3.add(JMAboutUs);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelImagenFondo)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelImagenFondo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JMVacunaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMVacunaMenuActionPerformed
        JDialogVacuna JDialogVacuna = new JDialogVacuna(this, true, vacunaController);
        JDialogVacuna.setTitle("Men煤 de las Vacunas");
        JDialogVacuna.setLocationRelativeTo(null);
        JDialogVacuna.setVisible(true);
    }//GEN-LAST:event_JMVacunaMenuActionPerformed

    private void JMPersonaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMPersonaMenuActionPerformed
        JDialogPersona personDialog = new JDialogPersona(this, true, personaController);
        personDialog.setTitle("Men煤 de las Personas");
        personDialog.setLocationRelativeTo(null);
        personDialog.setVisible(true);
    }//GEN-LAST:event_JMPersonaMenuActionPerformed

    private void JMVacunacionMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMVacunacionMenuActionPerformed
        JDialogVacunacion vacunacionDialog = new JDialogVacunacion(this, true, vacunacionController);
        vacunacionDialog.setTitle("Men煤 de las Vacunaciones");
        vacunacionDialog.setLocationRelativeTo(null);
        vacunacionDialog.setVisible(true);
    }//GEN-LAST:event_JMVacunacionMenuActionPerformed

    private void JMReporteMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMReporteMenuActionPerformed
        JDialogReporte reportDialog = new JDialogReporte(this, true, reporteController);
        reportDialog.setTitle("Men煤 de Reportes");
        reportDialog.setLocationRelativeTo(null);
        reportDialog.setVisible(true);
    }//GEN-LAST:event_JMReporteMenuActionPerformed

    private void JMImportarDatosPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMImportarDatosPersonaActionPerformed
        JDialogImportarPersonas importarDialog = new JDialogImportarPersonas(this, true, importController);
        importarDialog.setTitle("Men煤 para Importar Personas");
        importarDialog.setLocationRelativeTo(null);
        importarDialog.setVisible(true);
    }//GEN-LAST:event_JMImportarDatosPersonaActionPerformed

    private void JMAboutUsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JMAboutUsActionPerformed
        JDialogAboutUs sobreNos = new JDialogAboutUs(this, true);
        sobreNos.setTitle("Acerca de Nosotros");
        sobreNos.setLocationRelativeTo(null);
        sobreNos.setVisible(true);
    }//GEN-LAST:event_JMAboutUsActionPerformed

    private void jMExportarTodosDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMExportarTodosDatosActionPerformed
        BackupController backupConrtoller = new BackupController(personaController, vacunaController, vacunacionController);
        if (backupConrtoller.guardarCopiaSeguridadExcel()) {
            JOptionPane.showMessageDialog(null, "Copia guardada correctamente.", "Todo Correcto", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Ups, intente nuevamente en unos minutos.", "Algo ocurrio", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMExportarTodosDatosActionPerformed

    private void jMenuRestaurarCopiaSeguridadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRestaurarCopiaSeguridadActionPerformed
        int confirmacion = mostrarConfirmacion();
        if (confirmacion == JOptionPane.YES_OPTION) {
            File archivoBackup = seleccionarArchivo();
            if (archivoBackup != null) {
                procesarCopiaSeguridad(archivoBackup);
            }
        }
    }//GEN-LAST:event_jMenuRestaurarCopiaSeguridadActionPerformed

    private void jMConfiguracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMConfiguracionActionPerformed
        JDialogConfig configuracionDialog = new JDialogConfig(this, true);
        configuracionDialog.setTitle("Men煤 de Configuraci贸n");
        configuracionDialog.setLocationRelativeTo(null);
        configuracionDialog.setVisible(true);
    }//GEN-LAST:event_jMConfiguracionActionPerformed

    private int mostrarConfirmacion() {
        String mensaje = "驴Est谩 seguro que desea continuar?\nEsto elimina y reemplaza todos los datos actuales.\nSe recomienda guardar una copia de seguridad antes.";
        return JOptionPane.showConfirmDialog(null, mensaje, "Confirmaci贸n", JOptionPane.YES_NO_OPTION);
    }

    private File seleccionarArchivo() {
        FileProperties fileProperties = new FileProperties();
        String rutaDefault = fileProperties.getFile().getProperty("urlBackupLocation");
        File directorioInicial = new File(rutaDefault);
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(directorioInicial);
        fileChooser.setDialogTitle("Seleccione un archivo");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos excel (.xlsx)", "xlsx");
        fileChooser.setFileFilter(filter);
        int userSelection = fileChooser.showOpenDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            return fileChooser.getSelectedFile();
        }
        return null;
    }

    private void procesarCopiaSeguridad(File archivoBackup) {
        if (esArchivoValido(archivoBackup)) {
            BackupController backupController = new BackupController(personaController, vacunaController, vacunacionController);
            int[] resultados = backupController.sobrescribirCopiaSeguridad(archivoBackup);
            mostrarResultados(resultados);
        } else {
            mostrarError("Archivo no v谩lido para importar copia de seguridad.");
        }
    }

    private boolean esArchivoValido(File archivo) {
        return ((archivo != null)
                && (archivo.getName().endsWith("xls") || archivo.getName().endsWith("xlsx"))
                && (esArchivoExcelValidoParaImportar(archivo)));
    }

    private void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void mostrarResultados(int[] resultados) {
        String mensaje = "Resultados de la operaci贸n:\n\n"
                + "Personas:\n"
                + "  Inscriptos: " + resultados[0] + "\n"
                + "  Repetidos: " + resultados[1] + "\n"
                + "  Fallidos: " + resultados[2] + "\n\n"
                + "Vacunas:\n"
                + "  Inscriptos: " + resultados[3] + "\n"
                + "  Repetidos: " + resultados[4] + "\n"
                + "  Fallidos: " + resultados[5] + "\n\n"
                + "Vacunaciones:\n"
                + "  Inscriptos: " + resultados[6] + "\n"
                + "  Repetidos: " + resultados[7] + "\n"
                + "  Fallidos: " + resultados[8];
        JOptionPane.showMessageDialog(null, mensaje, "Resultados de la operaci贸n", JOptionPane.INFORMATION_MESSAGE);
    }

    @Override
    public Image getIconImage() {
        String ruta = "images/logoSimple.png";
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource(ruta));
        return retValue;
    }

    private void personalizarMenu() {
        String titulo = "Men煤 Principal - SoftSalud.inc | LP 2023 - ADES - UART - UNPA";
        this.setTitle(titulo);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem JMAboutUs;
    private javax.swing.JMenuItem JMImportarDatosPersona;
    private javax.swing.JMenuItem JMManualUsuario;
    private javax.swing.JMenuItem JMPersonaMenu;
    private javax.swing.JMenuItem JMReporteMenu;
    private javax.swing.JMenuItem JMVacunaMenu;
    private javax.swing.JMenuItem JMVacunacionMenu;
    private javax.swing.JMenuItem jMConfiguracion;
    private javax.swing.JMenuItem jMExportarTodosDatos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenu jMenuPrincipal;
    private javax.swing.JMenuItem jMenuRestaurarCopiaSeguridad;
    private javax.swing.JLabel labelImagenFondo;
    // End of variables declaration//GEN-END:variables
}

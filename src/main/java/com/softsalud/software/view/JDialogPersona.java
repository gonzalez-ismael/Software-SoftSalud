package com.softsalud.software.view;

import com.softsalud.software.controller.logic.PersonaController;
import com.softsalud.software.persistence.model.Persona;
import java.awt.Color;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Gonzalez Ismael
 */
public class JDialogPersona extends javax.swing.JDialog {

    public JComboBox<Integer> paginaComboBox;
    private final PersonaController controller;
    private Long dniBuscado;
    private final int EMPTY = -1, EXITO = 1, CLAVEREPETIDA = 2, UNKNOWNFAIL = 3;
    private final int DATETOSTRING = 4, STRINGTODATE = 5;

    /**
     * Creates new form JDialogPerson
     *
     * @param parent
     * @param modal
     * @param controller
     */
    public JDialogPersona(java.awt.Frame parent, boolean modal, PersonaController controller) {
        super(parent, modal);
        initComponents();
        this.controller = controller;
        this.controller.setVentana(this);
        this.controller.listarPersonas(TablePerson, jPanelBotonesPagina);
        getContentPane().setBackground(Color.darkGray);

        eventoBusquedaDni();
        eventoBusquedaNomYApe();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlTittle = new javax.swing.JLabel();
        jlDni = new javax.swing.JLabel();
        jtfDNI = new javax.swing.JTextField();
        jlLastName = new javax.swing.JLabel();
        jtfApellido = new javax.swing.JTextField();
        jlName = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jlBirthdate = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jlNeighbor = new javax.swing.JLabel();
        jtfBarrio = new javax.swing.JTextField();
        jlStreet = new javax.swing.JLabel();
        jtfCalle = new javax.swing.JTextField();
        jlHouseNum = new javax.swing.JLabel();
        jtfNumCasa = new javax.swing.JTextField();
        jlHouseNum1 = new javax.swing.JLabel();
        jcbLocalidad = new javax.swing.JComboBox<>();
        jlTelCel = new javax.swing.JLabel();
        jtfTelCel = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jcbTrasplantes = new javax.swing.JCheckBox();
        jcbCovid = new javax.swing.JCheckBox();
        jlRiskFactor = new javax.swing.JLabel();
        jtfFactoresRiesgo = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jlOptionTelCel = new javax.swing.JLabel();
        jtfOpcionalTelCel = new javax.swing.JTextField();
        jlErrorDni = new javax.swing.JLabel();
        jlErrorApellido = new javax.swing.JLabel();
        jlErrorNombre = new javax.swing.JLabel();
        jlErrorFechaNac = new javax.swing.JLabel();
        jlErrorTel = new javax.swing.JLabel();
        jlErrorDireccion = new javax.swing.JLabel();
        jlErrorRiskFactor = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfFechaNac = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnSearchName = new javax.swing.JButton();
        jtfSearchName = new javax.swing.JTextField();
        jtfSearchDni = new javax.swing.JTextField();
        btnSearchDNI = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jlTittle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePerson = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnReloader = new javax.swing.JButton();
        jPanelBotonesPagina = new javax.swing.JPanel();
        btnEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MENÚ - PERSONA");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(220, 220, 250));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jlTittle.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jlTittle.setForeground(new java.awt.Color(0, 0, 0));
        jlTittle.setText("Formulario de Inscripción de Personas :");

        jlDni.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlDni.setForeground(new java.awt.Color(0, 0, 0));
        jlDni.setText("DNI : ");

        jtfDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfDNIKeyTyped(evt);
            }
        });

        jlLastName.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlLastName.setForeground(new java.awt.Color(0, 0, 0));
        jlLastName.setText("Apellido/s : ");

        jlName.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlName.setForeground(new java.awt.Color(0, 0, 0));
        jlName.setText("Nombre/s : ");

        jlBirthdate.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlBirthdate.setForeground(new java.awt.Color(0, 0, 0));
        jlBirthdate.setText("Fecha Nac : ");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dirección", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 2, 12))); // NOI18N

        jlNeighbor.setText("Barrio : ");

        jlStreet.setText("Calle : ");

        jlHouseNum.setText("Casa ° : ");

        jtfNumCasa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNumCasaKeyTyped(evt);
            }
        });

        jlHouseNum1.setText("Localidad : ");

        jcbLocalidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rio Turbio", "Julia Defour", "Zona Rural", "Otros" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlStreet)
                            .addComponent(jlNeighbor)
                            .addComponent(jlHouseNum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCalle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                            .addComponent(jtfNumCasa, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfBarrio, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jlHouseNum1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbLocalidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlHouseNum1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNeighbor)
                    .addComponent(jtfBarrio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlStreet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlHouseNum)
                    .addComponent(jtfNumCasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jlTelCel.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlTelCel.setForeground(new java.awt.Color(0, 0, 0));
        jlTelCel.setText("Tel / Cel : ");

        jtfTelCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTelCelKeyTyped(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Ficha Médica", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 2, 12))); // NOI18N

        jcbTrasplantes.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jcbTrasplantes.setText("¿Tuvo Trasplantes?");

        jcbCovid.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jcbCovid.setText("¿Tuvo Covid?");

        jlRiskFactor.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlRiskFactor.setText("Factores de Riesgo : ");

        jtfFactoresRiesgo.setText("En caso de no poseer factores, poner \"NINGUNO\".");
        jtfFactoresRiesgo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfFactoresRiesgoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jcbCovid)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbTrasplantes))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jlRiskFactor)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jtfFactoresRiesgo)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCovid)
                    .addComponent(jcbTrasplantes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlRiskFactor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfFactoresRiesgo, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnSave.setText("Agregar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jlOptionTelCel.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        jlOptionTelCel.setForeground(new java.awt.Color(0, 0, 0));
        jlOptionTelCel.setText("Tel / Cel : ");

        jtfOpcionalTelCel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfOpcionalTelCelKeyTyped(evt);
            }
        });

        jlErrorDni.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorDni.setText(" ");

        jlErrorApellido.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorApellido.setText(" ");

        jlErrorNombre.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorNombre.setText(" ");

        jlErrorFechaNac.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorFechaNac.setText(" ");

        jlErrorTel.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorTel.setText(" ");

        jlErrorDireccion.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorDireccion.setText(" ");

        jlErrorRiskFactor.setForeground(new java.awt.Color(175, 0, 50));
        jlErrorRiskFactor.setText(" ");

        jLabel6.setForeground(new java.awt.Color(0, 0, 153));
        jLabel6.setText("Este segundo, es informacion ópcional");

        jtfFechaNac.setText("Formato: DD-MM-AAAA, ej : 12-09-1998");
        jtfFechaNac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfFechaNacFocusGained(evt);
            }
        });
        jtfFechaNac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfFechaNacKeyTyped(evt);
            }
        });

        btnUpdate.setText("Guardar Cambios");
        btnUpdate.setEnabled(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jlTittle)
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(jlErrorRiskFactor)
                .addContainerGap(244, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlDni, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlLastName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlBirthdate, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlTelCel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jlOptionTelCel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfDNI)
                    .addComponent(jlErrorDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfApellido)
                    .addComponent(jlErrorApellido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfNombre)
                    .addComponent(jlErrorNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlErrorFechaNac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfOpcionalTelCel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfTelCel)
                            .addComponent(jlErrorTel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1))
                    .addComponent(jtfFechaNac))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlErrorDireccion)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jlTittle)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlDni)
                    .addComponent(jtfDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jlErrorDni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlLastName))
                .addGap(0, 0, 0)
                .addComponent(jlErrorApellido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlName))
                .addGap(0, 0, 0)
                .addComponent(jlErrorNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlBirthdate)
                    .addComponent(jtfFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jlErrorFechaNac)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTelCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTelCel))
                .addGap(1, 1, 1)
                .addComponent(jlErrorTel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jlOptionTelCel)
                    .addComponent(jtfOpcionalTelCel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlErrorDireccion)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlErrorRiskFactor)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jtfApellido, jtfDNI, jtfNombre, jtfTelCel});

        jPanel2.setBackground(new java.awt.Color(255, 220, 220));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "BUSCAR PERSONAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Roboto", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 0, 0));

        btnSearchName.setText("Por Nombre y Apellido : ");
        btnSearchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNameActionPerformed(evt);
            }
        });

        jtfSearchName.setEnabled(false);

        jtfSearchDni.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfSearchDniKeyTyped(evt);
            }
        });

        btnSearchDNI.setText("Por DNI : ");
        btnSearchDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDNIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSearchName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfSearchName))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnSearchDNI)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfSearchDni)))
                .addGap(126, 126, 126))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfSearchDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchDNI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchName)
                    .addComponent(jtfSearchName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(220, 255, 220));

        jlTittle1.setFont(new java.awt.Font("Constantia", 1, 14)); // NOI18N
        jlTittle1.setForeground(new java.awt.Color(0, 0, 0));
        jlTittle1.setText("LISTADO DE PERSONAS : ");

        TablePerson.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Apellido", "Nombre", "Fec Nac", "Edad", "Telefono", "Telefono2", "Localidad", "Direccion", "Tuvo Covid?", "Tuvo Transplante?", "Factores de Riesgo"
            }
        ));
        jScrollPane1.setViewportView(TablePerson);

        btnDelete.setText("Eliminar");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReloader.setText("Recargar Página");
        btnReloader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloaderActionPerformed(evt);
            }
        });

        jPanelBotonesPagina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jlTittle1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanelBotonesPagina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnReloader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTittle1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBotonesPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnReloader)
                    .addComponent(btnEdit))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReloaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloaderActionPerformed
        controller.listarPersonas(TablePerson, jPanelBotonesPagina);
        clearBtns();
        clearCells();
    }//GEN-LAST:event_btnReloaderActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        Persona p = controller.editarPersona(TablePerson);
        if (p != null) {
            dniBuscado = p.getDni();
            jtfDNI.setText(dniBuscado.toString());
            jtfApellido.setText(p.getApellido());
            jtfNombre.setText(p.getNombre());
            jtfFechaNac.setText(formatearFecha(p.getFecha_nac().toString(), DATETOSTRING));
            jtfTelCel.setText(p.getNumero_tel().toString());
            jtfOpcionalTelCel.setText(p.getNumero_tel_opcional().toString());
            jtfBarrio.setText(p.getDireccion());
            jcbCovid.setSelected(p.isTuvo_covid());
            jcbTrasplantes.setSelected(p.isTiene_trasplantes());
            jtfFactoresRiesgo.setText(p.getFactores_riesgo());
            jtfCalle.setEnabled(false);
            jtfNumCasa.setEnabled(false);
            btnCancel.setEnabled(true);
            btnUpdate.setEnabled(true);
            btnEdit.setEnabled(false);
            btnSave.setEnabled(false);
            btnDelete.setEnabled(false);
        } else {
            mostrarMensajesError(EMPTY);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (controller.eliminarPersonaLogico(TablePerson)) {
            controller.listarPersonas(TablePerson, jPanelBotonesPagina);
            clearCells();
        } else {
            mostrarMensajesError(EMPTY);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jtfSearchDniKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchDniKeyTyped
        validarNumero(evt);
        validarLongitudCadena(evt, jtfSearchDni, 8);
    }//GEN-LAST:event_jtfSearchDniKeyTyped

    private void btnSearchDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDNIActionPerformed
        jtfSearchName.setEnabled(false);
        jtfSearchDni.setEnabled(true);
        jtfSearchDni.requestFocus();
    }//GEN-LAST:event_btnSearchDNIActionPerformed

    private void btnSearchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNameActionPerformed
        jtfSearchDni.setEnabled(false);
        jtfSearchName.setEnabled(true);
        jtfSearchName.requestFocus();
    }//GEN-LAST:event_btnSearchNameActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (estanCamposCompletosYValidos()) {
            int resultado = controller.modificarPersona(dniBuscado,
                    jtfDNI.getText(),
                    jtfApellido.getText(),
                    jtfNombre.getText(),
                    formatearFecha(jtfFechaNac.getText(), STRINGTODATE),
                    jtfTelCel.getText(),
                    jtfOpcionalTelCel.getText(),
                    jcbLocalidad.getSelectedItem().toString(),
                    jtfBarrio.getText(),
                    jcbCovid.isSelected(),
                    jcbTrasplantes.isSelected(),
                    jtfFactoresRiesgo.getText());
            switch (resultado) {
                case EXITO -> {
                    controller.listarPersonas(TablePerson, jPanelBotonesPagina);
                    dniBuscado = null;
                    clearCells();
                    clearBtns();
                }
                case CLAVEREPETIDA -> {
                    mostrarMensajesError(resultado);
                    jlErrorDni.setText("Ingresar un número de DNI válido");
                    jtfDNI.requestFocus();
                }
                default ->
                    mostrarMensajesError(resultado);
            }
        } else {
            String mensaje = "Exiten campos vacíos o inválidos. Revise e intente de nuevo.";
            String titulo = "Error";
            mostrarMensaje(mensaje, titulo, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void jtfFechaNacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFechaNacKeyTyped
        if (evt.getKeyChar() != 45) { // 45 es "-" en ascii
            validarNumero(evt);
        }
        validarLongitudCadena(evt, jtfFechaNac, 10);
    }//GEN-LAST:event_jtfFechaNacKeyTyped

    private void jtfFechaNacFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFechaNacFocusGained
        if (jtfFechaNac.getText().equals("Formato: DD-MM-AAAA, ej : 12-09-1998")) {
            jtfFechaNac.setText("");
        }
    }//GEN-LAST:event_jtfFechaNacFocusGained

    private void jtfOpcionalTelCelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfOpcionalTelCelKeyTyped
        validarNumero(evt);
    }//GEN-LAST:event_jtfOpcionalTelCelKeyTyped

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dniBuscado = null;
        clearCells();
        clearBtns();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (estanCamposCompletosYValidos()) {
            int resultado = controller.agregarPersona(jtfDNI.getText(),
                    jtfApellido.getText(),
                    jtfNombre.getText(),
                    formatearFecha(jtfFechaNac.getText(), STRINGTODATE),
                    jtfTelCel.getText(),
                    jtfOpcionalTelCel.getText(),
                    jcbLocalidad.getSelectedItem().toString(),
                    jtfBarrio.getText() + " " + jtfCalle.getText() + " " + jtfNumCasa.getText(),
                    jcbCovid.isSelected(),
                    jcbTrasplantes.isSelected(),
                    jtfFactoresRiesgo.getText());
            switch (resultado) {
                case EXITO -> {
                    controller.listarPersonas(TablePerson, jPanelBotonesPagina);
                    clearCells();
                    clearBtns();
                }
                case CLAVEREPETIDA -> {
                    mostrarMensajesError(resultado);
                    jlErrorDni.setText("Ingresar un número de DNI válido");
                    jtfDNI.requestFocus();
                }
                default ->
                    mostrarMensajesError(resultado);
            }
        } else {
            String mensaje = "Exiten campos vacíos o inválidos. Revise e intente de nuevo.";
            String titulo = "Error";
            mostrarMensaje(mensaje, titulo, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jtfFactoresRiesgoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfFactoresRiesgoMouseClicked
        jtfFactoresRiesgo.setText("");
    }//GEN-LAST:event_jtfFactoresRiesgoMouseClicked

    private void jtfTelCelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTelCelKeyTyped
        validarNumero(evt);
    }//GEN-LAST:event_jtfTelCelKeyTyped

    private void jtfNumCasaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNumCasaKeyTyped
        validarNumero(evt);
    }//GEN-LAST:event_jtfNumCasaKeyTyped

    private void jtfDNIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDNIKeyTyped
        validarNumero(evt);
        validarLongitudCadena(evt, jtfDNI, 8);
    }//GEN-LAST:event_jtfDNIKeyTyped

    private void eventoBusquedaDni() {
        // Agregamos un DocumentListener al dni
        jtfSearchDni.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                // Llamamos a la función cada vez que se inserta un carácter
                controller.buscarPersonaDni(TablePerson, jPanelBotonesPagina, jtfSearchDni);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                // Llamamos a la función cada vez que se elimina un carácter
                controller.buscarPersonaDni(TablePerson, jPanelBotonesPagina, jtfSearchDni);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // No es relevante para JTextFields sin formato
            }
        });
    }

    private void eventoBusquedaNomYApe() {
// Agregamos un DocumentListener al dni
        jtfSearchName.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                // Llamamos a la función cada vez que se inserta un carácter
                controller.buscarPersonaNomYApe(TablePerson, jPanelBotonesPagina, jtfSearchName);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                // Llamamos a la función cada vez que se elimina un carácter
                controller.buscarPersonaNomYApe(TablePerson, jPanelBotonesPagina, jtfSearchName);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                // No es relevante para JTextFields sin formato
            }
        });
    }

    private boolean estanCamposCompletosYValidos() {
        boolean camposValidos = true;
        clearLabelError();
        if (jtfFactoresRiesgo.getText().isEmpty() || jtfFactoresRiesgo.getText().equals("En caso de no poseer factores, poner \"NINGUNO\".")) {
            jlErrorRiskFactor.setText("Ingrese los factores de riesgos");
            jtfFactoresRiesgo.requestFocus();
            camposValidos = false;
        }
        if (jtfBarrio.getText().isEmpty()) {
            jlErrorDireccion.setText("Complete los datos de la dirección");
            jtfBarrio.requestFocus();
            camposValidos = false;
        }
        if (jtfTelCel.getText().isEmpty()) {
            jlErrorTel.setText("Ingrese el teléfono o celular");
            jtfTelCel.requestFocus();
            camposValidos = false;
        }
        if (jtfFechaNac.getText().isEmpty() || !esFechaValida() || jtfFechaNac.getText().equals("Formato: DD-MM-AAAA, ej : 12-09-1998")) {
            jlErrorFechaNac.setText("Ingrese una fecha de nacimiento válida");
            jtfFechaNac.requestFocus();
            camposValidos = false;
        }
        if (jtfNombre.getText().isEmpty()) {
            jlErrorNombre.setText("Ingrese el / los nombres/s");
            jtfNombre.requestFocus();
            camposValidos = false;
        }
        if (jtfApellido.getText().isEmpty()) {
            jlErrorApellido.setText("Ingrese el / los apellido/s");
            jtfApellido.requestFocus();
            camposValidos = false;
        }
        if (jtfDNI.getText().isEmpty() || !esDNIMayorMillon()) {
            jlErrorDni.setText("Ingresar un número de DNI válido");
            jtfDNI.requestFocus();
            camposValidos = false;
        }
        return camposValidos;
    }

    private boolean esFechaValida() {
        return (esEstructuraFechaValido() && esFormatoFechaValido()
                && esFechaMenorHoy() && esFechaMayor1900());
    }

    private boolean esEstructuraFechaValido() {
        String textoIngresado = jtfFechaNac.getText();
        return textoIngresado.matches("\\d{2}-\\d{2}-\\d{4}"); // Fecha en formato incorrecto
    }

    private boolean esFormatoFechaValido() {
        String[] partesFecha = jtfFechaNac.getText().split("-");
        int dia = Integer.parseInt(partesFecha[0]);
        int mes = Integer.parseInt(partesFecha[1]);
        int anio = Integer.parseInt(partesFecha[2]);

        // Verificar si la fecha es válida según el calendario gregoriano
        try {
            LocalDate fechaIngresada = LocalDate.of(anio, mes, dia);
            return true;
        } catch (DateTimeException e) {
            return false; // Fecha inválida
        }
    }

    private boolean esFechaMenorHoy() {
        String fechaFormateada = formatearFecha(jtfFechaNac.getText(), STRINGTODATE); // Convertir la fecha ingresada a un objeto LocalDate
        LocalDate fechaIngresada = LocalDate.parse(fechaFormateada);
        LocalDate fechaActual = LocalDate.now(); // Obtener la fecha actual
        return fechaIngresada.isBefore(fechaActual) || fechaIngresada.equals(fechaActual);
    }

    private boolean esFechaMayor1900() {
        String fechaFormateada = formatearFecha(jtfFechaNac.getText(), STRINGTODATE);
        LocalDate fechaIngresada = LocalDate.parse(fechaFormateada); // Convertir la fecha ingresada a un objeto LocalDate
        LocalDate fecha1900 = LocalDate.of(1900, 1, 1); // Crear una fecha para el año 1900
        return fechaIngresada.isAfter(fecha1900) || fechaIngresada.equals(fecha1900);
    }

    private boolean esDNIMayorMillon() {
        return (Long.parseLong(jtfDNI.getText()) > 1000000);
    }

    private void validarNumero(java.awt.event.KeyEvent evt) {
        int ascii = evt.getKeyChar();
        if (!(ascii >= 48 && ascii <= 57)) {
            evt.consume();
        }
    }

    private void validarLongitudCadena(java.awt.event.KeyEvent evt, javax.swing.JTextField array, int max) {
        if (array.getText().length() >= max) {
            evt.consume();
        }
    }

    private String formatearFecha(String fechaOriginal, int modo) {
        DateTimeFormatter formatoString = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        DateTimeFormatter formatoDate = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate nuevaFecha;
        try {
            switch (modo) {
                case STRINGTODATE -> {
                    nuevaFecha = LocalDate.parse(fechaOriginal, formatoString);
                    return nuevaFecha.format(formatoDate);
                }
                case DATETOSTRING -> {
                    nuevaFecha = LocalDate.parse(fechaOriginal, formatoDate);
                    return nuevaFecha.format(formatoString);
                }
                default -> {
                    return fechaOriginal;
                }
            }
        } catch (java.time.format.DateTimeParseException ex) {
            Logger.getLogger(JDialogPersona.class.getName()).log(Level.SEVERE, null, ex);
            return fechaOriginal;
        }
    }

    private void mostrarMensajesError(int resultadoOperacion) {
        String mensaje;
        String titulo;
        int tipoMensaje;
        switch (resultadoOperacion) {
            case CLAVEREPETIDA -> {
                mensaje = "El DNI ingresado ya está registrado para otra persona.";
                titulo = "Mensaje de Error";
                tipoMensaje = JOptionPane.ERROR_MESSAGE;
            }
            case EMPTY -> {
                mensaje = "Seleccione una celda para editar.";
                titulo = "Atención";
                tipoMensaje = JOptionPane.WARNING_MESSAGE;
            }
            default -> {
                mensaje = "Error desconocido.";
                titulo = "Ups";
                tipoMensaje = JOptionPane.ERROR_MESSAGE;
            }
        }
        mostrarMensaje(mensaje, titulo, tipoMensaje);
    }

    private void mostrarMensaje(String mensaje, String titulo, int tipoMensaje) {
        JOptionPane.showMessageDialog(rootPane, mensaje, titulo, tipoMensaje);
    }

    private void clearBtns() {
        btnCancel.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnEdit.setEnabled(true);
        btnSave.setEnabled(true);
        btnDelete.setEnabled(true);
    }

    private void clearCells() {
        jtfDNI.setText("");
        jtfApellido.setText("");
        jtfNombre.setText("");
        jtfFechaNac.setText("Formato: DD-MM-AAAA, ej : 12-09-1998");
        jtfTelCel.setText("");
        jtfOpcionalTelCel.setText("");
        jtfBarrio.setText("");
        jtfCalle.setText("");
        jtfNumCasa.setText("");
        jtfFactoresRiesgo.setText("En caso de no poseer factores, poner \"NINGUNO\".");
        jtfSearchDni.setText("");
        jtfSearchName.setText("");
        clearLabelError();
        jcbLocalidad.setSelectedIndex(0);
        jcbCovid.setSelected(false);
        jcbTrasplantes.setSelected(false);
        jtfCalle.setEnabled(true);
        jtfNumCasa.setEnabled(true);
    }

    private void clearLabelError() {
        jlErrorDni.setText(" ");
        jlErrorApellido.setText(" ");
        jlErrorNombre.setText(" ");
        jlErrorFechaNac.setText(" ");
        jlErrorTel.setText(" ");
        jlErrorDireccion.setText(" ");
        jlErrorRiskFactor.setText(" ");
    }

    public JComboBox<Integer> getPaginaComboBox() {
        return paginaComboBox;
    }

    public void setPaginaComboBox(JComboBox<Integer> paginaComboBox) {
        this.paginaComboBox = paginaComboBox;
    }

    public JTable getTablePerson() {
        return TablePerson;
    }

    public void setTablePerson(JTable TablePerson) {
        this.TablePerson = TablePerson;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePerson;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReloader;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchDNI;
    private javax.swing.JButton btnSearchName;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelBotonesPagina;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jcbCovid;
    private javax.swing.JComboBox<String> jcbLocalidad;
    private javax.swing.JCheckBox jcbTrasplantes;
    private javax.swing.JLabel jlBirthdate;
    private javax.swing.JLabel jlDni;
    private javax.swing.JLabel jlErrorApellido;
    private javax.swing.JLabel jlErrorDireccion;
    private javax.swing.JLabel jlErrorDni;
    private javax.swing.JLabel jlErrorFechaNac;
    private javax.swing.JLabel jlErrorNombre;
    private javax.swing.JLabel jlErrorRiskFactor;
    private javax.swing.JLabel jlErrorTel;
    private javax.swing.JLabel jlHouseNum;
    private javax.swing.JLabel jlHouseNum1;
    private javax.swing.JLabel jlLastName;
    private javax.swing.JLabel jlName;
    private javax.swing.JLabel jlNeighbor;
    private javax.swing.JLabel jlOptionTelCel;
    private javax.swing.JLabel jlRiskFactor;
    private javax.swing.JLabel jlStreet;
    private javax.swing.JLabel jlTelCel;
    private javax.swing.JLabel jlTittle;
    private javax.swing.JLabel jlTittle1;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfBarrio;
    private javax.swing.JTextField jtfCalle;
    private javax.swing.JTextField jtfDNI;
    private javax.swing.JTextField jtfFactoresRiesgo;
    private javax.swing.JTextField jtfFechaNac;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfNumCasa;
    private javax.swing.JTextField jtfOpcionalTelCel;
    private javax.swing.JTextField jtfSearchDni;
    private javax.swing.JTextField jtfSearchName;
    private javax.swing.JTextField jtfTelCel;
    // End of variables declaration//GEN-END:variables
}
